# This is an example properties file, which shows the various options that can be specified to configured the uts-rest-server.
# 
# In development mode, you can run without this file entirely, in which case, it will start up without a git server configured, 
# without a remote auth server to validate roles.  So long as you are in development mode (working on SNAPSHOT code) the server 
# will default to allowing anonymous read-only.

# If you set a system property of AUTH_USER_IMPORT and point it to a file with users to import into the local store, which can 
# contain users with other roles.

# It will use a local database, which only contains metadata and the beverage ontology.
# To have it download a DB from an artifact server upon startup, configure the "nexus_" sections, and the "db_" sections

### The Artifact server to fetch a DB from
#nexus_repository_url=http://52.61.165.55:9092/nexus/content/repositories/releases
#nexus_user=download

### This password should be encrypted (but doesn't have to be) with sh.isaac.api.util.PasswordHasher
### If the password is encrypted, you must create the file isaac-rest/decryption.password, and place the password there to decrypt the password.
#nexus_pwd=85djEjPY4D44nWSoB88E-ayzqrnJdJehHphjL5Q1YV8=---00Mp6qCiU0LxsZMtyRlkqQZMHfyniIxIRi1T87zOgetbTGM-gspah_KBUk0RP6iQY3r2lzTT7fA=

### Specify the DB to download, when starting up.
#db_group_id=sh.isaac.db
#db_artifact_id=small-demo
#db_version=1.2
#db_classifier=

### These are used for pushing changesets to a gitblit server
#git_root
#git_user
#git_pwd


### This should contain the path to the auth-api server.  If this isn't provided, then the server will go into local-auth mode.
### To configure a local-auth mode with roles, see uts-auth-api/src/test/resources/userImportTest.tsv
### This path should point down to the level before /1/.  So if the full URL is:
### http://localhost:8080/auth/rest/1/auth/user, then this should be http://localhost:8080/auth/rest
#auth_url=
#auth_url=http://localhost:9180/rest/

### If this is set to true, it will put a the server in a mode to allow anonymous read-only access to the entire API.  If set to false, 
### or not specified, then all users must pass credentials, or a valid ssoToken to access the system (when in production mode)
#anonymous_read=