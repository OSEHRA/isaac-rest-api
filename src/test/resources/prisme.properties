
# This is an example properties file, which shows the various options that prisme would specify when it deploys an 
# isaac-rest instance.  In development mode, you can run without this file entirely, in which case, it will start up without
# a git server configured, without prisme to validate roles (placing it into read-only mode) and without a database - so it 
# will start with a sample DB that just contains metadata, and the beverage ontology.

# To have it download a DB from an artifact server upon startup, configure the "nexus_" sections, and the "db_" sections


#These are the values that isaac-rest actively looks for.

### The Artifact server to fetch a DB from
#nexus_repository_url=http://52.61.165.55:9092/nexus/content/repositories/releases
#nexus_user=download

### This password should be encrypted (but doesn't have to be) with sh.isaac.api.util.PasswordHasher
### If the password is encrypted, you must create the file isaac-rest/decryption.password, and place the password there to decrypt the password.
#nexus_pwd=85djEjPY4D44nWSoB88E-ayzqrnJdJehHphjL5Q1YV8=---00Mp6qCiU0LxsZMtyRlkqQZMHfyniIxIRi1T87zOgetbTGM-gspah_KBUk0RP6iQY3r2lzTT7fA=

### Specify the DB to download, when starting up.
#db_group_id=sh.isaac.db
#db_artifact_id=small-demo
#db_version=1.2
#db_classifier=

### Prisme assigns this when it deploys an isaac-rest instance, to keep track of a particular instance.
#war_uuid=

### This is just for isaac-rest to sanity check, that the WAR file for isaac-rest that it deployed is the same as what is actually running
#war_version=6.04-SNAPSHOT

### Prism also populates these, but isaac-rest doesn't use them
#war_group_id=net.sagebits.tmp.rest
#war_artifact_id=isaac-rest
#war_classifier=
#war_package=war

### These are used for pushing changesets to a gitblit server
#git_root
#git_user
#git_pwd


### Prisme provides these URLs for fetching user and role information

### This value must be specified to enable prisme connection of roles.  If it is left null or blank, then 
### prisme is not queried for role information, rather, it uses a local debug mode.
#prisme_roles_by_token_url=https://localhost:8080/rails_prisme/roles/get_roles_by_token.json

#prisme_all_roles_url=https://localhost:8080/rails_prisme/roles/get_all_roles.json
#prisme_roles_user_url=https://localhost:8080/rails_prisme/roles/get_user_roles.json

### This confusing URL is not currently used by isaac-rest, but according to komet, it has some interaction with prisme_roles_user_url
#prisme_roles_ssoi_url=https://localhost:8080/rails_prisme/roles/get_ssoi_roles.json

### Prisme must pass a security token in this URL, that token + this URL is what allows us to post back events to prisme about system errors, etc
#prisme_notify_url=http://localhost:8080/rails_prisme/rails_prisme/log_event.json?security_token=log_event_J1EDQFvI8jDQS0ATU3Fo3mM6UO1tNyErh75TWxFSM2s=$$$qK3qMEzduNdgFOOjY99XaYuhtISudhNty1fMRcQbkR5RleOk0PVeZfCXSi8btQMffhTH7MGz2-waxRxBUc6N5Q==

### This was only used to help figure out how to make vuid calls, is deprecated
#prisme_root=http://localhost:8080/rails_prisme/rails_prisme
